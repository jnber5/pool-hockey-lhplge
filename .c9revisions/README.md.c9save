{"ts":1378824958534,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"angular-client-side-auth\n========================\n\nOne way to implement authentication/authorization in Angular applications.\n\n* Blogposts: \n  * [Original post discussing Angular.js client-side solution](http://www.frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/)\n  * [Follow-up post disussing Node.js server-side solution](http://www.frederiknakstad.com/blog/2013/08/04/authentication-in-single-page-applications-with-angular.js-part-2/)\n* [Live version](http://angular-client-side-auth.herokuapp.com/)\n\nTo run the server locally, open a terminal, and navigate to the directory you cloned the project to. Then run the following commands:\n\n```\nnpm install\nnode server.js\n```\n\nTwitter/Facebook/Google auth is enabled by default, but you can easily turn it off  by commenting out the `passport.use()` statements in the [server.js](server.js) file.\nIf you want to enable any of the social logins make sure to set the appropriate environment variables:\n\n| Provider | Key | Default value |\n| ---------| ----| --------------|\n| Twitter  | TWITTER_CONSUMER_KEY    | - |\n| Twitter  | TWITTER_CONSUMER_SECRET | - |\n| Twitter  | TWITTER_CALLBACK_URL    | http://localhost:8000/auth/twitter/callback |\n| Facebook | FACEBOOK_APP_ID         | -  |\n| Facebook | FACEBOOK_APP_SECRET     | -  |\n| Facebook | FACEBOOK_CALLBACK_URL   | http://localhost:8000/auth/facebook/callback  |\n| Google   | GOOGLE_REALM            | http://localhost:8000  |\n| Google   | GOOGLE_RETURN_URL       | http://localhost:8000/auth/google/return |\n| LinkedIn | LINKED_IN_KEY           | -  |\n| LinkedIn | LINKED_IN_SECRET        | -  |\n| LinkedIn |LINKED_IN_CALLBACK_URL   | http://localhost:8000/auth/linkedin/callback |\n\n## License\n```\nThe MIT License (MIT)\n\nCopyright (c) 2013 Frederik Nakstad\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n"]],"start1":0,"start2":0,"length1":0,"length2":2821}]],"length":2821}
{"contributors":[],"silentsave":false,"ts":1378824975916,"patch":[[{"diffs":[[-1,"angular-client-side-auth\n========================\n\nOne way to implement authentication/authorization in Angular applications.\n\n* Blogposts: \n  * [Original post discussing Angular.js client-side solution](http://www.frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/)\n  * [Follow-up post disussing Node.js server-side solution](http://www.frederiknakstad.com/blog/2013/08/04/authentication-in-single-page-applications-with-angular.js-part-2/)\n* [Live version](http://angular-client-side-auth.herokuapp.com/)\n\nTo run the server locally, open a terminal, and navigate to the directory you cloned the project to. Then run the following commands:\n\n```\nnpm install\nnode server.js\n```\n\nTwitter/Facebook/Google auth is enabled by default, but you can easily turn it off  by commenting out the `passport.use()` statements in the [server.js](server.js) file.\nIf you want to enable any of the social logins make sure to set the appropriate environment variables:\n\n| Provider | Key | Default value |\n| ---------| ----| --------------|\n| Twitter  | TWITTER_CONSUMER_KEY    | - |\n| Twitter  | TWITTER_CONSUMER_SECRET | - |\n| Twitter  | TWITTER_CALLBACK_URL    | http://localhost:8000/auth/twitter/callback |\n| Facebook | FACEBOOK_APP_ID         | -  |\n| Facebook | FACEBOOK_APP_SECRET     | -  |\n| Facebook | FACEBOOK_CALLBACK_URL   | http://localhost:8000/auth/facebook/callback  |\n| Google   | GOOGLE_REALM            | http://localhost:8000  |\n| Google   | GOOGLE_RETURN_URL       | http://localhost:8000/auth/google/return |\n| LinkedIn | LINKED_IN_KEY           | -  |\n| LinkedIn | LINKED_IN_SECRET        | -  |\n| LinkedIn |LINKED_IN_CALLBACK_URL   | http://localhost:8000/auth/linkedin/callback |\n\n## License\n```\nThe MIT License (MIT)\n\nCopyright (c) 2013 Frederik Nakstad\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n"]],"start1":0,"start2":0,"length1":2821,"length2":0}]],"length":0,"saved":false}
