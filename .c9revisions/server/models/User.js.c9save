{"ts":1377607846432,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var User\n    , _ =               require('underscore')\n    , passport =        require('passport')\n    , LocalStrategy =   require('passport-local').Strategy\n    , TwitterStrategy = require('passport-twitter').Strategy\n    , FacebookStrategy = require('passport-facebook').Strategy\n    , GoogleStrategy = require('passport-google').Strategy\n    , LinkedInStrategy = require('passport-linkedin').Strategy\n    , check =           require('validator').check\n    , userRoles =       require('../../client/js/routingConfig').userRoles;\n\nvar users = [\n    {\n        id:         1,\n        username:   \"user\",\n        password:   \"123\",\n        role:   userRoles.user\n    },\n    {\n        id:         2,\n        username:   \"admin\",\n        password:   \"123\",\n        role:   userRoles.admin\n    }\n];\n\nmodule.exports = {\n    addUser: function(username, password, role, callback) {\n        if(this.findByUsername(username) !== undefined)  return callback(\"UserAlreadyExists\");\n\n        // Clean up when 500 users reached\n        if(users.length > 500) {\n            users = users.slice(0, 2);\n        }\n\n        var user = {\n            id:         _.max(users, function(user) { return user.id; }).id + 1,\n            username:   username,\n            password:   password,\n            role:       role\n        };\n        users.push(user);\n        callback(null, user);\n    },\n\n    findOrCreateOauthUser: function(provider, providerId) {\n        var user = module.exports.findByProviderId(provider, providerId);\n        if(!user) {\n            user = {\n                id: _.max(users, function(user) { return user.id; }).id + 1,\n                username: provider + '_user', // Should keep Oauth users anonymous on demo site\n                role: userRoles.user,\n                provider: provider\n            };\n            user[provider] = providerId;\n            users.push(user);\n        }\n\n        return user;\n    },\n\n    findAll: function() {\n        return _.map(users, function(user) { return _.clone(user); });\n    },\n\n    findById: function(id) {\n        return _.clone(_.find(users, function(user) { return user.id === id }));\n    },\n\n    findByUsername: function(username) {\n        return _.clone(_.find(users, function(user) { return user.username === username; }));\n    },\n\n    findByProviderId: function(provider, id) {\n        return _.find(users, function(user) { return user[provider] === id; });\n    },\n\n    validate: function(user) {\n        check(user.username, 'Username must be 1-20 characters long').len(1, 20);\n        check(user.password, 'Password must be 5-60 characters long').len(5, 60);\n        check(user.username, 'Invalid username').not(/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/);\n\n        // TODO: Seems node-validator's isIn function doesn't handle Number arrays very well...\n        // Till this is rectified Number arrays must be converted to string arrays\n        // https://github.com/chriso/node-validator/issues/185\n        var stringArr = _.map(_.values(userRoles), function(val) { return val.toString() });\n        check(user.role, 'Invalid user role given').isIn(stringArr);\n    },\n\n    localStrategy: new LocalStrategy(\n        function(username, password, done) {\n\n            var user = module.exports.findByUsername(username);\n\n            if(!user) {\n                done(null, false, { message: 'Incorrect username.' });\n            }\n            else if(user.password != password) {\n                done(null, false, { message: 'Incorrect username.' });\n            }\n            else {\n                return done(null, user);\n            }\n\n        }\n    ),\n\n    twitterStrategy: function() {\n        if(!process.env.TWITTER_CONSUMER_KEY)    throw new Error('A Twitter Consumer Key is required if you want to enable login via Twitter.');\n        if(!process.env.TWITTER_CONSUMER_SECRET) throw new Error('A Twitter Consumer Secret is required if you want to enable login via Twitter.');\n\n        return new TwitterStrategy({\n            consumerKey: process.env.TWITTER_CONSUMER_KEY,\n            consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n            callbackURL: process.env.TWITTER_CALLBACK_URL || 'http://localhost:8000/auth/twitter/callback'\n        },\n        function(token, tokenSecret, profile, done) {\n            var user = module.exports.findOrCreateOauthUser(profile.provider, profile.id);\n            done(null, user);\n        });\n    },\n\n    facebookStrategy: function() {\n        if(!process.env.FACEBOOK_APP_ID)     throw new Error('A Facebook App ID is required if you want to enable login via Facebook.');\n        if(!process.env.FACEBOOK_APP_SECRET) throw new Error('A Facebook App Secret is required if you want to enable login via Facebook.');\n\n        return new FacebookStrategy({\n            clientID: process.env.FACEBOOK_APP_ID,\n            clientSecret: process.env.FACEBOOK_APP_SECRET,\n            callbackURL: process.env.FACEBOOK_CALLBACK_URL || \"http://localhost:8000/auth/facebook/callback\"\n        },\n        function(accessToken, refreshToken, profile, done) {\n            var user = module.exports.findOrCreateOauthUser(profile.provider, profile.id);\n            done(null, user);\n        });\n    },\n\n    googleStrategy: function() {\n\n        return new GoogleStrategy({\n            returnURL: process.env.GOOGLE_RETURN_URL || \"http://localhost:8000/auth/google/return\",\n            realm: process.env.GOOGLE_REALM || \"http://localhost:8000/\"\n        },\n        function(identifier, profile, done) {\n            var user = module.exports.findOrCreateOauthUser('google', identifier);\n            done(null, user);\n        });\n    },\n\n    linkedInStrategy: function() {\n        if(!process.env.LINKED_IN_KEY)     throw new Error('A LinkedIn App Key is required if you want to enable login via LinkedIn.');\n        if(!process.env.LINKED_IN_SECRET) throw new Error('A LinkedIn App Secret is required if you want to enable login via LinkedIn.');\n\n        return new LinkedInStrategy({\n            consumerKey: process.env.LINKED_IN_KEY,\n            consumerSecret: process.env.LINKED_IN_SECRET,\n            callbackURL: process.env.LINKED_IN_CALLBACK_URL || \"http://localhost:8000/auth/linkedin/callback\"\n          },\n           function(token, tokenSecret, profile, done) {\n            var user = module.exports.findOrCreateOauthUser('linkedin', profile.id);\n            done(null,user); \n          }\n        );\n    },\n    serializeUser: function(user, done) {\n        done(null, user.id);\n    },\n\n    deserializeUser: function(id, done) {\n        var user = module.exports.findById(id);\n\n        if(user)    { done(null, user); }\n        else        { done(null, false); }\n    }\n};"]],"start1":0,"start2":0,"length1":0,"length2":6794}]],"length":6794}
{"contributors":[],"silentsave":false,"ts":1377607902344,"patch":[[{"diffs":[[0,"egy\n"],[-1,"    , TwitterStrategy = require('passport-twitter').Strategy\n    , FacebookStrategy = require('passport-facebook').Strategy\n    , GoogleStrategy = require('passport-google').Strategy\n    , LinkedInStrategy = require('passport-linkedin').Strategy\n"],[0,"    "]],"start1":154,"start2":154,"length1":254,"length2":8},{"diffs":[[0,").check\n"],[1,""],[0,"    , us"]],"start1":201,"start2":201,"length1":16,"length2":16},{"diffs":[[0,"},\n\n"],[-1,"    findOrCreateOauthUser: function(provider, providerId) {\n        var user = module.exports.findByProviderId(provider, providerId);\n        if(!user) {\n            user = {\n                id: _.max(users, function(user) { return user.id; }).id + 1,\n                username: provider + '_user', // Should keep Oauth users anonymous on demo site\n                role: userRoles.user,\n                provider: provider\n            };\n            user[provider] = providerId;\n            users.push(user);\n        }\n\n        return user;\n    },\n\n"],[0,"    "]],"start1":1120,"start2":1120,"length1":555,"length2":8},{"diffs":[[0,"username) {\n"],[1,""],[0,"        retu"]],"start1":1376,"start2":1376,"length1":24,"length2":24},{"diffs":[[0,"},\n\n"],[-1,"    findByProviderId: function(provider, id) {\n        return _.find(users, function(user) { return user[provider] === id; });\n    },\n\n"],[0,"    "]],"start1":1486,"start2":1486,"length1":143,"length2":8}]],"length":5866,"saved":false}
{"ts":1377607935268,"patch":[[{"diffs":[[0,"),\n\n"],[-1,"    twitterStrategy: function() {\n        if(!process.env.TWITTER_CONSUMER_KEY)    throw new Error('A Twitter Consumer Key is required if you want to enable login via Twitter.');\n        if(!process.env.TWITTER_CONSUMER_SECRET) throw new Error('A Twitter Consumer Secret is required if you want to enable login via Twitter.');\n\n        return new TwitterStrategy({\n            consumerKey: process.env.TWITTER_CONSUMER_KEY,\n            consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n            callbackURL: process.env.TWITTER_CALLBACK_URL || 'http://localhost:8000/auth/twitter/callback'\n        },\n        function(token, tokenSecret, profile, done) {\n            var user = module.exports.findOrCreateOauthUser(profile.provider, profile.id);\n            done(null, user);\n        });\n    },\n\n    facebookStrategy: function() {\n        if(!process.env.FACEBOOK_APP_ID)     throw new Error('A Facebook App ID is required if you want to enable login via Facebook.');\n        if(!process.env.FACEBOOK_APP_SECRET) throw new Error('A Facebook App Secret is required if you want to enable login via Facebook.');\n\n        return new FacebookStrategy({\n            clientID: process.env.FACEBOOK_APP_ID,\n            clientSecret: process.env.FACEBOOK_APP_SECRET,\n            callbackURL: process.env.FACEBOOK_CALLBACK_URL || \"http://localhost:8000/auth/facebook/callback\"\n        },\n        function(accessToken, refreshToken, profile, done) {\n            var user = module.exports.findOrCreateOauthUser(profile.provider, profile.id);\n            done(null, user);\n        });\n    },\n\n    googleStrategy: function() {\n\n        return new GoogleStrategy({\n            returnURL: process.env.GOOGLE_RETURN_URL || \"http://localhost:8000/auth/google/return\",\n            realm: process.env.GOOGLE_REALM || \"http://localhost:8000/\"\n        },\n        function(identifier, profile, done) {\n            var user = module.exports.findOrCreateOauthUser('google', identifier);\n            done(null, user);\n        });\n    },\n\n    linkedInStrategy: function() {\n        if(!process.env.LINKED_IN_KEY)     throw new Error('A LinkedIn App Key is required if you want to enable login via LinkedIn.');\n        if(!process.env.LINKED_IN_SECRET) throw new Error('A LinkedIn App Secret is required if you want to enable login via LinkedIn.');\n\n        return new LinkedInStrategy({\n            consumerKey: process.env.LINKED_IN_KEY,\n            consumerSecret: process.env.LINKED_IN_SECRET,\n            callbackURL: process.env.LINKED_IN_CALLBACK_URL || \"http://localhost:8000/auth/linkedin/callback\"\n          },\n           function(token, tokenSecret, profile, done) {\n            var user = module.exports.findOrCreateOauthUser('linkedin', profile.id);\n            done(null,user); \n          }\n        );\n    },\n"],[0,"    "]],"start1":2798,"start2":2798,"length1":2809,"length2":8}]],"length":3065,"saved":false}
{"ts":1377608119494,"patch":[[{"diffs":[[0,");\n\n"],[-1,"        // Clean up when 500 users reached\n        if(users.length > 500) {\n            users = users.slice(0, 2);\n        }\n\n"],[0,"    "]],"start1":720,"start2":720,"length1":134,"length2":8}]],"length":2939,"saved":false}
{"ts":1377611431635,"patch":[[{"diffs":[[0,"oles"],[-1,";\n\nvar users"],[1,"\n    , mongoose"],[0," = "],[-1,"[\n"],[0,"    "],[-1,"{\n        id:         1,\n        username:   \"user\",\n        password:   \"123\",\n        role:"],[1," require('mongoose')\n    , bcrypt  =       require('bcrypt')\n    , SALT_WORK_FACTOR = 10 ;\n  \n//User Schema\nvar userSchema = mongoose.Schema({\n    firstName: { type: String, required: true },\n    lastName: { type: String, required: true },\n    nickname: { type: String, required: true },\n"],[0,"   "],[1," "],[0,"user"],[-1,"Roles.user\n    },\n    {\n        id:         2,\n        username:   \"admin\",\n        password:   \"123\",\n        role:   userRoles.admin\n    }\n]"],[1,"name: { type: String, required: true, unique: true },\n    password: { type: String, required: true },\n    email: { type: String, required: true, unique: true },\n    phoneNumber: { type: String },\n    cellPhoneNumber: { type: String },\n    userRole: { type: Number, required: true }\n})"],[0,";\n\nm"]],"start1":279,"start2":279,"length1":271,"length2":610},{"diffs":[[0,"(5, 60);\n       "],[1," //"],[0," check(user.user"]],"start1":1889,"start2":1889,"length1":32,"length2":35}]],"length":3281,"saved":false}
{"ts":1377611516543,"patch":[[{"diffs":[[0," }\n});\n\n"],[1,"// Bcrypt middleware\nuserSchema.pre('save', function (next) {\n    var user = this;\n\n    if (!user.isModified('password')) return next();\n\n    bcrypt.genSalt(SALT_WORK_FACTOR, function (err, salt) {\n        if (err) return next(err);\n\n        bcrypt.hash(user.password, salt, function (err, hash) {\n            if (err) return next(err);\n            user.password = hash;\n            next();\n        });\n    });\n});\n\n// Password verification\nuserSchema.methods.comparePassword = function (candidatePassword, cb) {\n    bcrypt.compare(candidatePassword, this.password, function (err, isMatch) {\n        if (err) return cb(err);\n        cb(null, isMatch);\n    });\n};\n\nvar User = mongoose.model('User', userSchema);\n\n"],[0,"module.e"]],"start1":880,"start2":880,"length1":16,"length2":728}]],"length":3993,"saved":false}
{"ts":1377611792640,"patch":[[{"diffs":[[0,"egy("],[-1,"\n        "],[0,"function"],[1," "],[0,"(use"]],"start1":3278,"start2":3278,"length1":25,"length2":17},{"diffs":[[0,") {\n"],[-1,"\n    "],[0,"        "],[-1,"var user = module.exports.findByU"],[1,"User.findOne({ u"],[0,"sername"],[-1,"("],[1,": "],[0,"username"],[1," }, function (err, user) {\n            console.log('USER : ' + user"],[0,");\n"],[-1,"\n"],[0,"    "]],"start1":3316,"start2":3316,"length1":74,"length2":119},{"diffs":[[0,"  if"],[-1,"(!user) {\n               "],[1," (err) { return done(err); }\n            if (!user) { return"],[0," don"]],"start1":3441,"start2":3441,"length1":33,"length2":68},{"diffs":[[0,"{ message: '"],[-1,"Incorrect"],[1,"Unknown user ' +"],[0," username.' "]],"start1":3524,"start2":3524,"length1":33,"length2":40},{"diffs":[[0,"username"],[-1,".'"],[0," });"],[-1,"\n           "],[0," }\n     "]],"start1":3553,"start2":3553,"length1":34,"length2":20},{"diffs":[[0,"    "],[-1,"else if(user.p"],[1,"user.compareP"],[0,"assword"],[-1," != "],[1,"("],[0,"password"],[-1,") {\n                done(null, false, { message: 'Incorrect username.' }"],[1,", function (err, isMatch) {\n                if (err) return done(err);\n                if (isMatch) {\n                    return done(null, user"],[0,");\n "]],"start1":3576,"start2":3576,"length1":113,"length2":181},{"diffs":[[0,"\n       "],[-1,"     }\n"],[0,"        "]],"start1":3755,"start2":3755,"length1":23,"length2":16},{"diffs":[[0,"    "],[-1,"  "],[1,"}"],[0," else {\n"],[1,"    "],[0,"    "]],"start1":3768,"start2":3768,"length1":18,"length2":21},{"diffs":[[0,"ll, "],[-1,"user);\n            }\n"],[1,"false, { message: 'Invalid password' });\n                }\n            });"],[0,"\n   "]],"start1":3815,"start2":3815,"length1":29,"length2":82},{"diffs":[[0,"       }"],[1,");"],[0,"\n    "],[1,"}"],[0,"),\n\n    "]],"start1":3895,"start2":3895,"length1":21,"length2":24},{"diffs":[[0,"    "],[-1,"var user = module.exports.findById(id);\n\n        if(user)    { done(null"],[1,"User.findById(id, function (err"],[0,", user)"],[-1,"; }"],[1," {"],[0,"\n   "]],"start1":4040,"start2":4040,"length1":90,"length2":48},{"diffs":[[0,"    "],[-1,"else    "],[0,"   "],[-1," {"],[0," done("],[-1,"null, fal"],[1,"err, u"],[0,"se"],[1,"r"],[0,");"],[-1," }"],[1,"\n        });"],[0,"\n   "]],"start1":4089,"start2":4089,"length1":42,"length2":40}]],"length":4134,"saved":false}
{"ts":1377612042903,"patch":[[{"diffs":[[0,"    "],[-1,"userR"],[1,"r"],[0,"ole: { "],[-1,"type"],[1,"bitMask"],[0,": Nu"]],"start1":836,"start2":836,"length1":24,"length2":23},{"diffs":[[0,"Number, "],[-1,"required"],[1,"title"],[0,": "],[1,"S"],[0,"tr"],[-1,"ue"],[1,"ing"],[0," }\n});\n\n"]],"start1":857,"start2":857,"length1":30,"length2":29}]],"length":4132,"saved":false}
{"ts":1377612269866,"patch":[[{"diffs":[[0,"ion() {\n        "],[1,"\n        User.find(\n            {},\n            function(err, docs) {\n                if (!err){ \n                   console.log(docs);\n                   "],[0,"return _.map(use"]],"start1":2065,"start2":2065,"length1":32,"length2":187},{"diffs":[[0,"n _.map("],[-1,"user"],[1,"doc"],[0,"s, funct"]],"start1":2241,"start2":2241,"length1":20,"length2":19},{"diffs":[[0,"(user); });\n"],[1,"                }\n                else { throw err;}\n            }\n        );\n"],[0,"    },\n\n    "]],"start1":2286,"start2":2286,"length1":24,"length2":102}]],"length":4364,"saved":false}
{"ts":1377612398580,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(docs);\n                   return"],[1,"var x ="],[0," _.m"]],"start1":2194,"start2":2194,"length1":52,"length2":15},{"diffs":[[0,"(user); });\n"],[1,"                   console.log(x);\n                   return x;\n"],[0,"            "]],"start1":2249,"start2":2249,"length1":24,"length2":88}]],"length":4391,"saved":false}
{"ts":1377612517457,"patch":[[{"diffs":[[0,"    "],[-1,"var x ="],[1,"return"],[0," _.m"]],"start1":2194,"start2":2194,"length1":15,"length2":14},{"diffs":[[0,"});\n"],[-1,"                   console.log(x);\n                   return x;\n"],[0,"    "]],"start1":2256,"start2":2256,"length1":72,"length2":8}]],"length":4326,"saved":false}
{"ts":1377612887407,"patch":[[{"diffs":[[0,"       \n"],[1,"        var x;\n        \n"],[0,"        "]],"start1":2074,"start2":2074,"length1":16,"length2":40},{"diffs":[[0,"r.find(\n"],[-1,""],[0,"        "]],"start1":2117,"start2":2117,"length1":16,"length2":16},{"diffs":[[0,"        "],[-1,"return"],[1,"x = "],[0," _.map(d"]],"start1":2214,"start2":2214,"length1":22,"length2":20},{"diffs":[[0,"}\n            }\n"],[-1,""],[0,"        );\n    }"]],"start1":2333,"start2":2333,"length1":32,"length2":32},{"diffs":[[0,"     );\n"],[1,"        \n        return x;\n"],[0,"    },\n\n"]],"start1":2352,"start2":2352,"length1":16,"length2":43}]],"length":4375,"saved":false}
{"ts":1377612930865,"patch":[[{"diffs":[[0,"     );\n        "],[1,"console.log(x);"],[0,"\n        return "]],"start1":2352,"start2":2352,"length1":32,"length2":47}]],"length":4390,"saved":false}
{"ts":1377613117790,"patch":[[{"diffs":[[0,"   \n"],[-1,"        var x;\n        \n"],[0,"    "]],"start1":2078,"start2":2078,"length1":32,"length2":8},{"diffs":[[0,"r.find(\n"],[1,""],[0,"        "]],"start1":2093,"start2":2093,"length1":16,"length2":16},{"diffs":[[0,"        "],[1,"var "],[0,"x =  _.m"]],"start1":2190,"start2":2190,"length1":16,"length2":20},{"diffs":[[0,"(user); });\n"],[1,"                   console.log(x);\n"],[0,"            "]],"start1":2250,"start2":2250,"length1":24,"length2":59},{"diffs":[[0," );\n"],[-1,"        console.log(x);\n        return x;"],[0,"\n   "]],"start1":2371,"start2":2371,"length1":49,"length2":8}]],"length":4364,"saved":false}
{"ts":1377614010640,"patch":[[{"diffs":[[0,"        \n       "],[1," var y ="],[0," User.find(\n    "]],"start1":2073,"start2":2073,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"console.log(x);"],[1,"return x;\n                   "],[0,"\n   "]],"start1":2285,"start2":2285,"length1":23,"length2":37},{"diffs":[[0,"      );"],[1,"\n        console.log(y);\n        return y;"],[0,"\n\n    },"]],"start1":2388,"start2":2388,"length1":16,"length2":58}]],"length":4428,"saved":false}
{"ts":1377614661668,"patch":[[{"diffs":[[0,"unction("],[1,"res"],[0,") {\n    "]],"start1":2061,"start2":2061,"length1":16,"length2":19},{"diffs":[[0,"    "],[-1,"\n        var y = User.find(\n            {},\n           "],[1,"User.find({},"],[0," fun"]],"start1":2080,"start2":2080,"length1":63,"length2":21},{"diffs":[[0,"tion"],[1," "],[0,"(err, "],[-1,"docs) {\n                if (!err){ \n                   var x =  _.map(docs, function(user) { return _.clone(user); });\n                   return x;\n                   \n                }\n                else { throw err;}\n            }\n        );\n        console.log(y);\n        return y;\n"],[1,"users) {\n            res.json(users);\n        });"],[0,"\n   "]],"start1":2102,"start2":2102,"length1":302,"length2":64}]],"length":4151,"saved":false}
{"ts":1377614927869,"patch":[[{"diffs":[[0,"r, users) {\n"],[1,"            \n"],[0,"            "]],"start1":2110,"start2":2110,"length1":24,"length2":37}]],"length":4164,"saved":false}
{"ts":1377614942198,"patch":[[{"diffs":[[0,"        "],[1,"_.each(users, function(user) {\n                delete user.password;\n            });"],[0,"\n       "]],"start1":2126,"start2":2126,"length1":16,"length2":100}]],"length":4248,"saved":false}
{"ts":1377615187573,"patch":[[{"diffs":[[0,"unction(user) {\n"],[1,"                console.log(user.password);\n"],[0,"                "]],"start1":2149,"start2":2149,"length1":32,"length2":76}]],"length":4292,"saved":false}
{"ts":1377615346223,"patch":[[{"diffs":[[0,"        "],[-1,"console.log("],[1,"delete "],[0,"user.pas"]],"start1":2173,"start2":2173,"length1":28,"length2":23},{"diffs":[[0,"password"],[-1,")"],[0,";\n      "]],"start1":2193,"start2":2193,"length1":17,"length2":16},{"diffs":[[0,"        "],[-1,"delete user.password"],[1,"console.log(user)"],[0,";\n      "]],"start1":2211,"start2":2211,"length1":36,"length2":33}]],"length":4283,"saved":false}
{"ts":1377615627408,"patch":[[{"diffs":[[0,"    "],[-1,"delete "],[1,"user = _.omit("],[0,"user"],[-1,"."],[1,", '"],[0,"password"],[1,"')"],[0,";\n  "]],"start1":2177,"start2":2177,"length1":28,"length2":39}]],"length":4294,"saved":false}
{"ts":1377615686302,"patch":[[{"diffs":[[0,"        "],[-1,"user"],[1,"var s"],[0," = _.omi"]],"start1":2173,"start2":2173,"length1":20,"length2":21},{"diffs":[[0,"ole.log("],[-1,"user"],[1,"s"],[0,");\n     "]],"start1":2235,"start2":2235,"length1":20,"length2":17}]],"length":4292,"saved":false}
{"ts":1377615869141,"patch":[[{"diffs":[[0,"    "],[-1,"var s = _.omit("],[1,"delete "],[0,"user"],[-1,", '"],[1,"s."],[0,"password"],[-1,"');\n                console.log(s)"],[0,";\n  "]],"start1":2177,"start2":2177,"length1":72,"length2":29}]],"length":4249,"saved":false}
{"ts":1377615872961,"patch":[[{"diffs":[[0,"ete user"],[-1,"s"],[0,".passwor"]],"start1":2184,"start2":2184,"length1":17,"length2":16}]],"length":4248,"saved":false}
{"ts":1377615891801,"patch":[[{"diffs":[[0,"ssword;\n"],[1,"                console.log(user);\n"],[0,"        "]],"start1":2195,"start2":2195,"length1":16,"length2":51}]],"length":4283,"saved":false}
{"ts":1377615986703,"patch":[[{"diffs":[[0,"ete user"],[-1,"."],[1,"['"],[0,"password"],[1,"']"],[0,";\n      "]],"start1":2184,"start2":2184,"length1":25,"length2":28}]],"length":4286,"saved":false}
{"ts":1377616122717,"patch":[[{"diffs":[[0,"user"],[-1,"['"],[1,"."],[0,"password"],[-1,"'];\n                console.log(user)"],[0,";\n  "]],"start1":2188,"start2":2188,"length1":55,"length2":17}]],"length":4248,"saved":false}
{"ts":1377616415906,"patch":[[{"diffs":[[0,"    "],[-1,"delete user.password"],[1,"user = _.pick(user, 'username', 'role');\n                console.log(user)"],[0,";\n  "]],"start1":2177,"start2":2177,"length1":28,"length2":82}]],"length":4302,"saved":false}
{"ts":1377616568155,"patch":[[{"diffs":[[0,"= _."],[-1,"pick"],[1,"omit"],[0,"(user, '"],[-1,"username', 'role"],[1,"password"],[0,"');\n"]],"start1":2186,"start2":2186,"length1":36,"length2":28}]],"length":4294,"saved":false}
{"ts":1377616620943,"patch":[[{"diffs":[[0,"= _."],[-1,"omit"],[1,"pick"],[0,"(user, '"],[-1,"password"],[1,"username', 'role"],[0,"');\n"]],"start1":2186,"start2":2186,"length1":28,"length2":36}]],"length":4302,"saved":false}
{"ts":1377616641747,"patch":[[{"diffs":[[0,"sole.log(user);\n"],[1,"                console.log(users);\n"],[0,"            });\n"]],"start1":2241,"start2":2241,"length1":32,"length2":68}]],"length":4338,"saved":false}
{"ts":1377617007476,"patch":[[{"diffs":[[0,"    "],[-1,"_.each(users"],[1,"var retour = _.clone(users);\n            _.each(retour"],[0,", fu"]],"start1":2130,"start2":2130,"length1":20,"length2":62},{"diffs":[[0,"es.json("],[-1,"users"],[1,"retour"],[0,");\n     "]],"start1":2364,"start2":2364,"length1":21,"length2":22}]],"length":4381,"saved":false}
{"ts":1377617025091,"patch":[[{"diffs":[[0,"    "],[-1,"    console.log(user);\n   "],[1,"});\n"],[0,"    "]],"start1":2272,"start2":2272,"length1":34,"length2":12},{"diffs":[[0,"});\n            "],[-1," "],[0,"console.log(user"]],"start1":2276,"start2":2276,"length1":33,"length2":32},{"diffs":[[0,"log("],[-1,"users);\n            }"],[1,"retour"],[0,");\n "]],"start1":2300,"start2":2300,"length1":29,"length2":14}]],"length":4343,"saved":false}
{"ts":1377617611241,"patch":[[{"diffs":[[0,"r = "],[-1,"_.pick(user, 'username', 'role')"],[1,"delete user.password"],[0,";\n  "]],"start1":2226,"start2":2226,"length1":40,"length2":28}]],"length":4331,"saved":false}
{"ts":1377617777821,"patch":[[{"diffs":[[0,") {\n"],[-1,"            var retour = _.clone(users);\n"],[0,"    "]],"start1":2118,"start2":2118,"length1":49,"length2":8},{"diffs":[[0," _.each("],[-1,"retour"],[1,"users"],[0,", functi"]],"start1":2133,"start2":2133,"length1":22,"length2":21},{"diffs":[[0,"        "],[-1," user ="],[0," delete "]],"start1":2172,"start2":2172,"length1":23,"length2":16},{"diffs":[[0,"ssword;\n    "],[-1,"        });\n"],[0,"            "]],"start1":2195,"start2":2195,"length1":36,"length2":24},{"diffs":[[0,"ole.log("],[-1,"retour"],[1,"user);\n            }"],[0,");\n     "]],"start1":2223,"start2":2223,"length1":22,"length2":36},{"diffs":[[0,"son("],[-1,"retour"],[1,"users"],[0,");\n "]],"start1":2271,"start2":2271,"length1":14,"length2":13}]],"length":4283,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377622959482,"patch":[[{"diffs":[[0,"    "],[-1,"_.each(users, function(user) {\n                delete user.password;\n                console.log(user);\n            });"],[0,"\n   "]],"start1":2130,"start2":2130,"length1":127,"length2":8}]],"length":4164,"saved":false}
{"ts":1377623035529,"patch":[[{"diffs":[[0,") {\n"],[-1,"            \n"],[0,"    "]],"start1":2118,"start2":2118,"length1":21,"length2":8},{"diffs":[[0,"on(users"],[1,".select('-password')"],[0,");\n     "]],"start1":2140,"start2":2140,"length1":16,"length2":36}]],"length":4171,"saved":false}
{"ts":1377623325796,"patch":[[{"diffs":[[0,"find({},"],[1," ['-password'],"],[0," functio"]],"start1":2089,"start2":2089,"length1":16,"length2":31},{"diffs":[[0,"sers"],[-1,".select('-password')"],[0,");\n "]],"start1":2159,"start2":2159,"length1":28,"length2":8}]],"length":4166,"saved":false}
{"ts":1377623392478,"patch":[[{"diffs":[[0,"d({}, ['"],[-1,"-"],[0,"password"]],"start1":2092,"start2":2092,"length1":17,"length2":16}]],"length":4165,"saved":false}
{"ts":1377623408929,"patch":[[{"diffs":[[0,"d({}, ['"],[-1,"password"],[1,"username', 'role"],[0,"'], func"]],"start1":2092,"start2":2092,"length1":24,"length2":32}]],"length":4173,"saved":false}
{"ts":1377623541348,"patch":[[{"diffs":[[0,"{}, "],[-1,"['username', 'role']"],[1,"'-password'"],[0,", fu"]],"start1":2094,"start2":2094,"length1":28,"length2":19}]],"length":4164,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377624186990,"patch":[[{"diffs":[[0,"oose =      "],[1,"  "],[0,"require('mon"]],"start1":294,"start2":294,"length1":24,"length2":26},{"diffs":[[0,"crypt  ="],[1,"  "],[0,"       r"]],"start1":335,"start2":335,"length1":16,"length2":18}]],"length":4168,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377631135834,"patch":[[{"diffs":[[0,"assword'"],[-1,", "],[1,")\n          .populate('season')\n          .exec("],[0,"function"]],"start1":2105,"start2":2105,"length1":18,"length2":64}]],"length":4214,"saved":false}
{"ts":1377631187477,"patch":[[{"diffs":[[0,"te('"],[-1,"season"],[1,"franchise"],[0,"')\n "]],"start1":2132,"start2":2132,"length1":14,"length2":17}]],"length":4217,"saved":false}
{"ts":1377631506093,"patch":[[{"diffs":[[0,"TOR = 10"],[-1," "],[1,"\n    , Franchise = require('../../server/js/Franchise.js')"],[0,";\n  \n//U"]],"start1":389,"start2":389,"length1":17,"length2":74}]],"length":4274,"saved":false}
{"ts":1377631578123,"patch":[[{"diffs":[[0,"OR = 10\n"],[1,"    , Schema = mongoose.Schema\n"],[0,"    , Fr"]],"start1":390,"start2":390,"length1":16,"length2":47},{"diffs":[[0,"String }"],[1,",\n    franchise: { type: Schema.Types.ObjectId, ref: 'Franchise', required: false }"],[0,"\n});\n\n//"]],"start1":964,"start2":964,"length1":16,"length2":99}]],"length":4388,"saved":false}
{"ts":1377631583895,"patch":[[{"diffs":[[0,"ema\n"],[-1,"    , Franchise = require('../../server/js/Franchise.js');\n"],[0,"  \n/"]],"start1":425,"start2":425,"length1":67,"length2":8}]],"length":4329,"saved":false}
{"ts":1377634450489,"patch":[[{"diffs":[[0,"ername }"],[-1,","],[1,")\n            .populate('franchise')\n            .exec("],[0," functio"]],"start1":3550,"start2":3550,"length1":17,"length2":71}]],"length":4383,"saved":false}
